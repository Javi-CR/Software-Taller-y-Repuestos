@model IEnumerable<FacturaViewModel>



<section id="profile-section" class="py-5">
    <div class="container">



        <div class="facturas-container">
            <div class="facturas-header">
                <h3>Gestión de Facturas</h3>
                <p class="subtitle">Panel de administración de Facturas</p>
            </div>

            <div class="card facturas-card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5>Todas las Facturas</h5>

                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Producto</th>
                                    <th scope="col">Cantidad</th>
                                    <th scope="col">
                                        <div class="d-flex align-items-center">
                                            <span>Estado</span>
                                            <i class="bi bi-filter ms-1"></i>
                                        </div>
                                    </th>
                                    <th scope="col">Fecha</th>
                                    <th scope="col">Usuario</th>
                                    <th scope="col">Comprobante</th>
                                    <th scope="col">Total</th>
                                    <th scope="col">Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Any())
                                {
                                    int index = 1;
                                    foreach (var factura in Model)
                                    {
                                        <tr>
                                            <td>@index</td>
                                            <td class="product-cell">@factura.NombreProducto</td>
                                            <td>@factura.Cantidad</td>
                                            <td>
                                                <span class="estado-badge @GetEstadoClass(factura.EstadoPago)">
                                                    @factura.EstadoPago
                                                </span>
                                            </td>
                                            <td>@factura.FechaCompra.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <div class="user-info">
                                                    <i class="bi bi-person-circle me-1"></i>
                                                    <span class="email-text">@factura.CorreoUsuario</span>
                                                </div>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(factura.ImagenFactura))
                                                {
                                                    <a href="@factura.ImagenFactura" target="_blank" class="img-preview-link">
                                                        <img src="@factura.ImagenFactura" alt="Comprobante" class="img-thumbnail factura-thumbnail" />
                                                        <div class="img-preview-hover">
                                                            <i class="bi bi-zoom-in"></i>
                                                        </div>
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="no-image-badge">
                                                        <i class="bi bi-file-earmark-x me-1"></i>Sin imagen
                                                    </span>
                                                }
                                            </td>
                                            <td class="precio-cell">@factura.Total.ToString("C", System.Globalization.CultureInfo.CreateSpecificCulture("es-CR"))</td>
                                            <td>
                                                <form method="post" asp-action="CambiarEstado" asp-controller="AdminFactura" class="status-form">
                                                    <input type="hidden" name="id" value="@factura.FacturaId" />
                                                    <div class="input-group">
                                                        <select name="nuevoEstado" class="form-select status-select">
                                                            <option value="En revisión">En revisión</option>
                                                            <option value="Aprobado">Aprobado</option>
                                                            <option value="Rechazado">Rechazado</option>
                                                        </select>
                                                        <button type="submit" class="btn btn-update">
                                                            <i class="bi bi-check-circle"></i>
                                                        </button>
                                                    </div>
                                                </form>
                                            </td>
                                        </tr>
                                        index++;
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="9" class="text-center empty-table">
                                            <div class="empty-state">
                                                <i class="bi bi-file-earmark-x"></i>
                                                <p>No se encontraron facturas.</p>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="pagination-info">
                            Mostrando <span class="fw-bold">@Model.Count()</span> facturas
                        </div>

                    </div>
                </div>
            </div>
        </div>


        <!-- Toast de notificación tras cambio exitoso -->
        <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1080">
            <div id="estadoActualizadoToast" class="toast bg-dark text-light" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header bg-secondary text-light">
                    <i class="bi bi-check-circle-fill text-success me-2"></i>
                    <strong class="me-auto">Estado actualizado</strong>
                    <small class="text-muted">Ahora</small>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Cerrar"></button>
                </div>
                <div class="toast-body">
                    <div class="d-flex align-items-center">
                        <div>El estado de la factura <span id="toastFacturaId" class="fw-bold"></span> ha sido cambiado a <span id="toastEstadoNuevo" class="fw-bold"></span> correctamente.</div>
                    </div>
                </div>
            </div>
        </div>



    </div>
</section>


@functions {
    public string GetEstadoClass(string estado)
    {
        return estado.ToLower() switch
        {
            "aprobado" => "estado-aprobado",
            "en revisión" => "estado-revision",
            "rechazado" => "estado-rechazado",
            _ => "estado-default"
        };
    }
}


<!-- Script para manejar la notificación post-cambio -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Función para mostrar la notificación después del cambio
        function mostrarNotificacionCambio(facturaId, nuevoEstado) {
            // Actualizar el contenido del toast
            document.getElementById('toastFacturaId').textContent = facturaId;

            const estadoElement = document.getElementById('toastEstadoNuevo');
            estadoElement.textContent = nuevoEstado;

            // Aplicar estilo según el estado
            estadoElement.className = 'fw-bold';
            if (nuevoEstado === 'Aprobado') {
                estadoElement.classList.add('text-success');
            } else if (nuevoEstado === 'En revisión') {
                estadoElement.classList.add('text-warning');
            } else if (nuevoEstado === 'Rechazado') {
                estadoElement.classList.add('text-danger');
            }

            // Mostrar el toast
            const toastElement = document.getElementById('estadoActualizadoToast');
            const toast = new bootstrap.Toast(toastElement, { autohide: true, delay: 6000 });
            toast.show();
        }

        // Interceptar el envío del formulario para mostrar notificación después
        const statusForms = document.querySelectorAll('.status-form');

        statusForms.forEach(form => {
            form.addEventListener('submit', function(e) {
                // No prevenir el envío aquí para permitir que se procese normalmente

                const facturaId = form.querySelector('input[name="id"]').value;
                const selectElement = form.querySelector('.status-select');
                const nuevoEstado = selectElement.options[selectElement.selectedIndex].text;

                // Almacenar temporalmente los datos del formulario en sessionStorage
                sessionStorage.setItem('ultimaFacturaId', facturaId);
                sessionStorage.setItem('ultimoEstado', nuevoEstado);
            });
        });

        // Verificar si hay datos almacenados de un envío reciente (al cargar la página después del post)
        if (sessionStorage.getItem('ultimaFacturaId') && sessionStorage.getItem('ultimoEstado')) {
            const facturaId = sessionStorage.getItem('ultimaFacturaId');
            const nuevoEstado = sessionStorage.getItem('ultimoEstado');

            // Mostrar la notificación
            mostrarNotificacionCambio(facturaId, nuevoEstado);

            // Limpiar los datos almacenados
            sessionStorage.removeItem('ultimaFacturaId');
            sessionStorage.removeItem('ultimoEstado');
        }
    });
</script>


<style>

    :root {
        --dark-bg: #121212;
        --card-bg: #1e1e1e;
        --card-header: #252525;
        --card-border: #333;
        --text-primary: #f5f5f5;
        --text-secondary: #aaaaaa;
        --accent-color: #5e72e4;
        --accent-hover: #4a5cd0;
        --success-color: #2dce89;
        --warning-color: #fb6340;
        --danger-color: #f5365c;
        --info-color: #11cdef;
    }

    .container {
        padding-top: 60px;
        padding-bottom: 60px;
    }

    body {
        background-color: var(--dark-bg);
        color: var(--text-primary);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Contenedor principal */
    .facturas-container {
        padding: 2rem 1rem;
        max-width: 1400px;
        margin: 0 auto;
    }

    .facturas-header {
        margin-bottom: 1.5rem;
        padding: 0 0.5rem;
    }

        .facturas-header h3 {
            margin-bottom: 0.3rem;
            font-weight: 600;
            color: var(--text-primary);
        }

    .subtitle {
        color: var(--text-secondary);
        font-size: 0.9rem;
        margin-bottom: 1.5rem;
    }

    /* Estilos de la tarjeta */
    .facturas-card {
        background-color: var(--card-bg);
        border-radius: 12px;
        border: 1px solid var(--card-border);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .card-header {
        background-color: var(--card-header);
        padding: 1.25rem 1.5rem;
        border-bottom: 1px solid var(--card-border);
    }

        .card-header h5 {
            color: var(--text-primary);
            font-weight: 600;
            margin: 0;
        }

    .card-body {
        padding: 1rem;
    }

    .card-footer {
        background-color: var(--card-header);
        padding: 1rem 1.5rem;
        border-top: 1px solid var(--card-border);
    }

    /* Buscador */
    .search-box {
        position: relative;
        max-width: 300px;
    }

        .search-box input {
            background-color: rgba(255, 255, 255, 0.05);
            border: 1px solid var(--card-border);
            color: var(--text-primary);
            border-radius: 6px;
            padding-right: 2.5rem;
            font-size: 0.875rem;
            height: 38px;
        }

            .search-box input:focus {
                background-color: rgba(255, 255, 255, 0.1);
                box-shadow: 0 0 0 0.25rem rgba(94, 114, 228, 0.25);
                border-color: var(--accent-color);
            }

        .search-box i {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-secondary);
        }

    /* Estilos para la tabla */
    .table {
        color: var(--text-primary);
        margin-bottom: 0;
    }

        .table thead th {
            background-color: rgba(0, 0, 0, 0.2);
            color: var(--text-secondary);
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            padding: 0.75rem 1rem;
            border-bottom: 1px solid var(--card-border);
            vertical-align: middle;
        }

        .table tbody tr {
            transition: background-color 0.2s;
        }

            .table tbody tr:hover {
                background-color: rgba(255, 255, 255, 0.05);
            }

        .table td {
            padding: 1rem;
            vertical-align: middle;
            border-color: var(--card-border);
            font-size: 0.875rem;
        }

    /* Producto */
    .product-cell {
        font-weight: 500;
    }

    /* Estado */
    .estado-badge {
        display: inline-block;
        padding: 0.4rem 0.75rem;
        border-radius: 6px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .estado-aprobado {
        background-color: rgba(45, 206, 137, 0.15);
        color: var(--success-color);
    }

    .estado-revision {
        background-color: rgba(251, 99, 64, 0.15);
        color: var(--warning-color);
    }

    .estado-rechazado {
        background-color: rgba(245, 54, 92, 0.15);
        color: var(--danger-color);
    }

    .estado-default {
        background-color: rgba(17, 205, 239, 0.15);
        color: var(--info-color);
    }

    /* Información de usuario */
    .user-info {
        display: flex;
        align-items: center;
    }

        .user-info i {
            color: var(--text-secondary);
        }

    .email-text {
        max-width: 180px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        display: inline-block;
    }

    /* Imágenes de factura */
    .img-preview-link {
        position: relative;
        display: inline-block;
    }

    .factura-thumbnail {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 6px;
        border: 1px solid var(--card-border);
        background-color: rgba(255, 255, 255, 0.05);
        transition: all 0.2s;
    }

    .img-preview-hover {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.4);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.2s;
        border-radius: 6px;
    }

        .img-preview-hover i {
            color: white;
            font-size: 1.25rem;
        }

    .img-preview-link:hover .img-preview-hover {
        opacity: 1;
    }

    .img-preview-link:hover .factura-thumbnail {
        transform: scale(1.05);
    }

    .no-image-badge {
        display: inline-flex;
        align-items: center;
        padding: 0.4rem 0.75rem;
        font-size: 0.75rem;
        background-color: rgba(255, 255, 255, 0.05);
        border-radius: 6px;
        color: var(--text-secondary);
    }

    /* Precio */
    .precio-cell {
        font-weight: 600;
        color: var(--success-color);
    }

    /* Formulario de estado */
    .status-form {
        width: 100%;
    }

    .status-select {
        /* background-color: rgba(255, 255, 255, 0.05);*/
        border: 1px solid var(--card-border);
        color: var(--text-primary);
        font-size: 0.875rem;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        height: 36px;
        color: #ff01ec !important; /* Un gris oscuro para mejor legibilidad */
        background-color: #f9f9f9; /* Un fondo gris claro */
    }
    

        .status-select:focus {
            background-color: rgba(255, 255, 255, 0.1);
            box-shadow: none;
            border-color: var(--accent-color);
        }

    .btn-update {
        background-color: var(--accent-color);
        color: white;
        border: none;
        padding: 0.375rem 0.75rem;
        transition: background-color 0.2s;
    }

        .btn-update:hover {
            background-color: var(--accent-hover);
            color: white;
        }

    /* Estado vacío */
    .empty-state {
        padding: 2rem;
        text-align: center;
    }

        .empty-state i {
            font-size: 2.5rem;
            color: var(--card-border);
            margin-bottom: 1rem;
        }

        .empty-state p {
            color: var(--text-secondary);
            margin: 0;
        }

    /* Paginación */
    .pagination-info {
        color: var(--text-secondary);
        font-size: 0.875rem;
    }

    .page-link {
        background-color: transparent;
        border-color: var(--card-border);
        color: var(--text-secondary);
    }

    .page-item.active .page-link {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
        color: white;
    }

    .page-item.disabled .page-link {
        background-color: transparent;
        color: #6c757d;
    }

    .page-link:hover {
        background-color: rgba(255, 255, 255, 0.05);
        color: var(--text-primary);
        border-color: var(--card-border);
    }

    /* Media queries */
    @@media (max-width: 992px) {
        .table thead th, .table td

    {
        padding: 0.75rem;
    }

    .email-text {
        max-width: 120px;
    }

    }

    @@media (max-width: 768px) {
        .search-box

    {
        width: 100%;
        max-width: none;
        margin-top: 1rem;
    }

    .card-header {
        flex-direction: column;
        align-items: flex-start;
    }

    .factura-thumbnail {
        width: 50px;
        height: 50px;
    }

    }
</style>